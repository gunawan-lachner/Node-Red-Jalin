[
    {
        "id": "b2b2a85f623ee8bb",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4983d460445b7886",
        "type": "tab",
        "label": "Menu",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "026f72c9c10c6ee8",
        "type": "tab",
        "label": "MenuBackup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5b6ceccc0b8f8113",
        "type": "tab",
        "label": "Audit",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "efc869c07b0e2986",
        "type": "tab",
        "label": "Command",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0f8e6d71e9fc9c4",
        "type": "tab",
        "label": "Cek Koneksi",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5f92df34f6bffd8",
        "type": "tab",
        "label": "Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "672488469399d0f1",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4156c09952f38b56",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cea7ed5b0a0f01e6",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "jalin",
        "tz": "+08:00",
        "charset": "UTF8"
    },
    {
        "id": "de4edb16e2fe9fda",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqttdashboard.com",
        "port": "1883",
        "clientid": "clientId-CodeMechanic",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1b6256ffd06a1a71",
        "type": "MySQLdatabase",
        "name": "ITMCORE",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "itmcore",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "8f0952be.200eb",
        "type": "sqlitedb",
        "db": "C:\\WORK\\DB\\SqLite\\test.sqlite",
        "mode": "RWC"
    },
    {
        "id": "2968a726ab12d19e",
        "type": "MySQLdatabase",
        "name": "Ren-SIT",
        "host": "10.132.131.13",
        "port": "3306",
        "db": "itmcore",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "389dba188387bcce",
        "type": "MySQLdatabase",
        "name": "Ren-UAT",
        "host": "10.132.131.19",
        "port": "3306",
        "db": "itmcore",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "1358ab37345160ad",
        "type": "MySQLdatabase",
        "name": "WLA",
        "host": "10.132.144.12",
        "port": "3306",
        "db": "itmcore",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "7caae597ab540484",
        "type": "MySQLdatabase",
        "name": "STG",
        "host": "10.132.17.3",
        "port": "3306",
        "db": "itmcore",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "6b15a72c08bd9030",
        "type": "mysql",
        "z": "b2b2a85f623ee8bb",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "DB",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "1d89135f9362c6a9"
            ]
        ]
    },
    {
        "id": "64b6d4a8cb5dfc5c",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "QUERY",
        "func": "msg.topic = 'SELECT  '+\n            'Expense_ID, '+\n            'Expense_Name, '+\n            'Expense_Amount, '+\n            'DATE_FORMAT(Expense_Datetime, \"%Y-%m-%d %H:%i\") as Expense_DateTime, '+\n            'Expense_Remarks '+\n            'FROM tutorial.expenses;'\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 300,
        "wires": [
            [
                "6b15a72c08bd9030"
            ]
        ]
    },
    {
        "id": "8803ac67b6aace4b",
        "type": "inject",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "64b6d4a8cb5dfc5c"
            ]
        ]
    },
    {
        "id": "1d89135f9362c6a9",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "cef801336e444de7",
        "type": "mysql",
        "z": "b2b2a85f623ee8bb",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "DB",
        "x": 410,
        "y": 340,
        "wires": [
            [
                "a4c6acb84046bca4",
                "d5c46af50f848ec9"
            ]
        ]
    },
    {
        "id": "a24866634be830d0",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "QUERY",
        "func": "msg.topic = 'SELECT  '+\n            // 'Expense_ID, '+\n            'Expense_Name, '+\n            'Expense_Amount, '+\n            'DATE_FORMAT(Expense_Datetime, \"%Y-%m-%d %H:%i\") as Expense_DateTime, '+\n            'Expense_Remarks '+\n            'FROM tutorial.expenses;'\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 340,
        "wires": [
            [
                "cef801336e444de7"
            ]
        ]
    },
    {
        "id": "a4c6acb84046bca4",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 340,
        "wires": []
    },
    {
        "id": "d5c46af50f848ec9",
        "type": "http response",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "4ec0502629967bd9",
        "type": "http request",
        "z": "b2b2a85f623ee8bb",
        "name": "request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:1881/ecp/menu",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 300,
        "y": 560,
        "wires": [
            [
                "7779e000ad4d5618"
            ]
        ]
    },
    {
        "id": "7779e000ad4d5618",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 560,
        "wires": []
    },
    {
        "id": "82f8ae89bbe90771",
        "type": "http in",
        "z": "b2b2a85f623ee8bb",
        "name": "expenses",
        "url": "/tuts/expenses",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "a24866634be830d0"
            ]
        ]
    },
    {
        "id": "a94cdfa57348833e",
        "type": "uibuilder",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "topic": "",
        "url": "Contoh",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "useSecurity": false,
        "sessionLength": 432000,
        "tokenAutoExtend": false,
        "oldUrl": "Jalin",
        "reload": false,
        "sourceFolder": "src",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "2e8364255f20bfde"
            ],
            []
        ]
    },
    {
        "id": "7e1bdc3beee37a94",
        "type": "http in",
        "z": "b2b2a85f623ee8bb",
        "name": "add",
        "url": "/tuts/addexpense",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "261906f34d3e0f36"
            ]
        ]
    },
    {
        "id": "261906f34d3e0f36",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "QUERY",
        "func": "msg.topic = `INSERT INTO expenses (Expense_Name, Expense_Amount, Expense_Datetime, Expense_Remarks) `+\n`VALUES ('${msg.payload.Expense_Name}',${msg.payload.Expense_Amount},'${msg.payload.Expense_Datetime}','${msg.payload.Expense_Remarks}');`\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 400,
        "wires": [
            [
                "ea5c2f2f4044b72a"
            ]
        ]
    },
    {
        "id": "ea5c2f2f4044b72a",
        "type": "mysql",
        "z": "b2b2a85f623ee8bb",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "DB",
        "x": 410,
        "y": 400,
        "wires": [
            [
                "83015219f5223314"
            ]
        ]
    },
    {
        "id": "83015219f5223314",
        "type": "http response",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 420,
        "wires": []
    },
    {
        "id": "4697ae187c635121",
        "type": "inject",
        "z": "b2b2a85f623ee8bb",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Expense_Name\":\"Electric Bill\",\"Expense_Amount\":2400,\"Expense_Datetime\":\"2019-12-26 09:52:01\",\"Expense_Remarks\":\"Test VECO\"}",
        "payloadType": "json",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "4ec0502629967bd9"
            ]
        ]
    },
    {
        "id": "9c147c0df4a774bf",
        "type": "http in",
        "z": "b2b2a85f623ee8bb",
        "name": "report",
        "url": "/tuts/report",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "8880d274bb2af4e6"
            ]
        ]
    },
    {
        "id": "8880d274bb2af4e6",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "Query",
        "func": "msg.topic = 'SELECT * FROM expense_report;'\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 480,
        "wires": [
            [
                "f0d232750deddb15"
            ]
        ]
    },
    {
        "id": "f0d232750deddb15",
        "type": "mysql",
        "z": "b2b2a85f623ee8bb",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "DB",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "2bbc0275a66673e3",
                "9e32fc53d3b72d85"
            ]
        ]
    },
    {
        "id": "2bbc0275a66673e3",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "9e32fc53d3b72d85",
        "type": "http response",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 460,
        "wires": []
    },
    {
        "id": "dd89e0896485f1a9",
        "type": "link in",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "links": [
            "cc232fd55666d59f",
            "3dfbd4f077f13f4b",
            "89e1a4ceac90b0d3",
            "c29521f1e15aeb3d"
        ],
        "x": 195,
        "y": 20,
        "wires": [
            [
                "a94cdfa57348833e"
            ]
        ]
    },
    {
        "id": "2e8364255f20bfde",
        "type": "switch",
        "z": "b2b2a85f623ee8bb",
        "name": "modules",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Login",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Logout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Startup",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "b9b4546bca08157d"
            ],
            [
                "3a9343d76bb40d2f"
            ],
            [
                "8ce8a3f1d24b87b0"
            ]
        ]
    },
    {
        "id": "b9b4546bca08157d",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "Login",
        "func": "console.log(\"Login\");\nconsole.log(\"    msg.tokennnn::: \" + msg.token);\nflow.set(\"\" + msg.token, msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 20,
        "wires": [
            [
                "89e1a4ceac90b0d3",
                "1a0844636fea3a4f"
            ]
        ]
    },
    {
        "id": "3a9343d76bb40d2f",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "Logout",
        "func": "flow.set(msg.token, undefined);\nconsole.log(\"Logout\");\nconsole.log(\"    msg.tokennnn::: \" + msg.token);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 60,
        "wires": [
            [
                "89e1a4ceac90b0d3",
                "096608f9d8d74e86"
            ]
        ]
    },
    {
        "id": "8ce8a3f1d24b87b0",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "Startup",
        "func": "console.log(\"Startup\");\nconsole.log(\"    msg.tokennnn::: \" + msg.token);\n\n//If there is not token return session undefined\nif(msg.token == undefined || msg.token == null)\n{\n    msg.session = undefined;\n    return msg;\n}\n\n//If there is token check if server side has details\nvar details = flow.get(msg.token);\n//If none, then return session undefined\nif(details == undefined || details == null)\n{\n    msg.session = undefined;\n}\n//If there is return to front end that session details\nelse\n{\n    //Session details\n    msg.session = \n    {\n        'uniqueid': details.session.uniqueid,\n        'user_id': details.session.user_id,\n        'username': details.session.username,\n        'fullname': details.session.fullname,\n        'database': details.config.database,\n        'container_id': details.config.container_id,\n        'container_name': details.config.container_name,\n        'start_Time': details.session.startTime,\n    };\n    \n    //User Details\n    msg.payload = \n    {\n        'user_id': details.user.user_id,\n        'isActive': details.user.isActive,\n        'username': details.user.username,\n        'fullname': details.user.fullname,\n        'avatar': details.user.avatar,\n        'database': details.config.database,\n        'container_id': details.config.container_id,\n        'container_name': details.config.container_name,\n    }\n}\n// console.log(\"Startup\");\n// console.log(\"    msg.tokennnn::: \" + msg.token);\n// console.log(\"msg.session.database::: \" + msg.session.database);\n// console.log(\"msg.session.container_id::: \" + msg.session.container_id);\nconsole.log(\"msg.payload.fullname::: \" + msg.payload.fullname);\n// console.log(\"msg.payload.database::: \" + msg.payload.database);\n// console.log(\"msg.payload.container_id::: \" + msg.payload.container_id);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 100,
        "wires": [
            [
                "89e1a4ceac90b0d3",
                "674cd421bd6552f6"
            ]
        ]
    },
    {
        "id": "89e1a4ceac90b0d3",
        "type": "link out",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "mode": "link",
        "links": [
            "dd89e0896485f1a9"
        ],
        "x": 635,
        "y": 60,
        "wires": []
    },
    {
        "id": "1a0844636fea3a4f",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "Login",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 20,
        "wires": []
    },
    {
        "id": "674cd421bd6552f6",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "Startup",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "token",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "096608f9d8d74e86",
        "type": "debug",
        "z": "b2b2a85f623ee8bb",
        "name": "Logout",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 60,
        "wires": []
    },
    {
        "id": "34d03f32cf1dcf4c",
        "type": "http in",
        "z": "b2b2a85f623ee8bb",
        "name": "login",
        "url": "/ecp/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "b409efa4ec4dd692"
            ]
        ]
    },
    {
        "id": "b409efa4ec4dd692",
        "type": "function",
        "z": "b2b2a85f623ee8bb",
        "name": "Query",
        "func": "var username = msg.payload.username;\nvar password = msg.payload.password;\n\nmsg.topic = `SELECT * FROM t_usermaster \n             where username = '${username}' \n             and password = '${password}';`\n// console.info('Login: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "e614b56833a5599b"
            ]
        ]
    },
    {
        "id": "e614b56833a5599b",
        "type": "mysql",
        "z": "b2b2a85f623ee8bb",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "DB",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "50a352f3ccf62490"
            ]
        ]
    },
    {
        "id": "50a352f3ccf62490",
        "type": "http response",
        "z": "b2b2a85f623ee8bb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 220,
        "wires": []
    },
    {
        "id": "35f1602c6036cfbb",
        "type": "uibuilder",
        "z": "b2b2a85f623ee8bb",
        "name": "Jalin",
        "topic": "",
        "url": "Jalin",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "useSecurity": false,
        "sessionLength": 432000,
        "tokenAutoExtend": false,
        "oldUrl": "Contoh",
        "reload": false,
        "sourceFolder": "src",
        "x": 110,
        "y": 140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d77c9b41787b4bdc",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "Menu",
        "url": "/ecp/menu",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "e5e2790dbe02f458"
            ]
        ]
    },
    {
        "id": "e5e2790dbe02f458",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Menu",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar member = msg.payload.member;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\nvar date = msg.payload.date;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if(member != '') {\n                msg.topic += 'AND participant_type = \"' + member + '\" ';\n        }\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_iss_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 AND oc.iss_participant_id != 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" +\n                \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        \n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC; \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT *, cp.id AS idCP \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT \" + \n                \"trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID' \" +\n                \"FROM transaction trans \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'Transaction') {\n        msg.topic = \"SELECT \" +\n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if (date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        if(rrn.length > 0) {\n                msg.topic += \"AND reff.content = '\" + rrn + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr;\";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (jenis == undefined){\n        msg.topic == \"\";\n} else if (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database Lokal');\nconsole.info('Jenis: ' + jenis);\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\nconsole.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('acquirer: ' + acquirer);\nconsole.info('binPartId: ' + binPartId);\nconsole.info('keterangan: ' + keterangan);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 60,
        "wires": [
            [
                "1f383ee46044a61c"
            ]
        ]
    },
    {
        "id": "1f383ee46044a61c",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "1b6256ffd06a1a71",
        "name": "DB",
        "x": 430,
        "y": 60,
        "wires": [
            [
                "79b527e2e0684419",
                "c5d9d0e8bcd08012"
            ]
        ]
    },
    {
        "id": "79b527e2e0684419",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Lokal",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "c5d9d0e8bcd08012",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "d9020067382ecb14",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "Picker",
        "url": "/ecp/picker",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "0b35d6f49d2d0246"
            ]
        ]
    },
    {
        "id": "0b35d6f49d2d0246",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Picker",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE 1 = 1 \";\n        if (parameter.length > 0 || parameter > 0) {\n                msg.topic += \"AND id = \" + parameter + \" ;\";\n        }\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" + \n        \"CONCAT(id, '-', name) AS concatName \" + \n        \"FROM participant WHERE participant_type = 'ACQ' \" +\n        \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugins'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE 1 = 1 \";\n        if (parameter.length > 0) {\n                msg.topic += \"AND id = \" + parameter + \" ;\";\n        }\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Members') {\n        msg.topic = \"SELECT participant_type AS memberId FROM participant GROUP BY participant_type ;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT id,state_type,description, \" + \n        \"CONCAT(state_type, '-', description) AS concatName \" + \n        \"FROM cfg_state_type ;\";\n}\nif (jenis == 'Participant') {\n        msg.topic = \"SELECT * FROM participant \" + \n        \"WHERE 1 = 1 \";\n        if(parameter.length > 0) {\n                msg.topic += \"AND id = \" + parameter + \" ;\";\n        }\n}\nif(jenis == 'NodeType') {\n        msg.topic = \"SELECT id,connection_type,description, \" +\n                \"CONCAT(id, '-', description) AS concatName \" +\n                \"FROM cfg_node_type WHERE 1 = 1 \";\n        if (parameter.length > 0) {\n                msg.topic += \"AND id = \" + parameter + \" ;\";\n        }\n}\n\nconsole.info('Picker Database Lokal');\nconsole.info('jenis: ' + jenis);\nconsole.info('parameter: ' + parameter);\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 140,
        "wires": [
            [
                "77a6e466cf0b9991"
            ]
        ]
    },
    {
        "id": "77a6e466cf0b9991",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "1b6256ffd06a1a71",
        "name": "DB",
        "x": 430,
        "y": 140,
        "wires": [
            [
                "8de7e38afd715657",
                "669584b354f93dac"
            ]
        ]
    },
    {
        "id": "8de7e38afd715657",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Lokal",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "669584b354f93dac",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "e2dc0c70912dfa6e",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "pickerSit",
        "url": "/ecp/pickerSit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "0e40d6cb7da7cb8f"
            ]
        ]
    },
    {
        "id": "0e40d6cb7da7cb8f",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query PickerSIT",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\nvar panPrefix = msg.payload.panPrefix;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar binPartId = msg.payload.binPartId;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugins'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE 1 = 1 \";\n        if(parameter != '') {\n                msg.topic += \"AND id = '\" + parameter + \"' \";\n        }\n        msg.topic += \";\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\n// if (jenis == 'TrxAttr') {\n//         msg.topic = \"SELECT CONCAT(field,': ',content) AS Kolom FROM transaction_attr \" +\n//         \"WHERE transaction_id = '\" + parameter + \"' \";\n// }\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT *, CONCAT(field,': ',content) AS Kolom FROM transaction_attr \" +\n        \"WHERE transaction_id = '\" + parameter + \"' \";\n        if (parameter.length > 0) {\n                msg.topic += \"AND transaction_id = '\" + parameter + \"' ;\";\n        }\n}\nif (jenis == 'PluginStates'){\n        msg.topic = \"SELECT id,state_type,description, \" + \n        \"CONCAT(state_type, '-', description) AS concatName \" + \n        \"FROM cfg_state_type ;\";\n}\nif (jenis == 'Routing') {\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" +\n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" +\n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" +\n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" +\n                \"WHERE 1 = 1 \";\n\n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" +\n                        \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" +\n                        \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC; \"\n}\n\nconsole.info('Picker Database SIT');\nconsole.info('Jenis: ' + jenis);\nconsole.info('Parameter: ' + parameter);\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 340,
        "wires": [
            [
                "092d9001dfda65bc"
            ]
        ]
    },
    {
        "id": "092d9001dfda65bc",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "2968a726ab12d19e",
        "name": "",
        "x": 440,
        "y": 340,
        "wires": [
            [
                "251aec136a98a975",
                "a1bd1e803e86e539"
            ]
        ]
    },
    {
        "id": "251aec136a98a975",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result SIT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "a1bd1e803e86e539",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "1a35cd6db2480a0a",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "MenuUAT",
        "url": "/ecp/menuUat",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "ed651f524c6a7c25"
            ]
        ]
    },
    {
        "id": "ed651f524c6a7c25",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Menu UAT",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\nvar member = msg.payload.member;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if (member != '') {\n                msg.topic += \"AND participant_type = '\" + member + \"' \";\n        }\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_iss_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" + \n                \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT *, cp.id AS idCP \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        if(rrn.length > 0) {\n                msg.topic += \"AND reff.content = '\" + rrn + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database UAT');\n// console.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 460,
        "wires": [
            [
                "d557859e7eec4e28"
            ]
        ]
    },
    {
        "id": "5ca6ff1d9c671b21",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "pickerUat",
        "url": "/ecp/pickerUat",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 540,
        "wires": [
            [
                "9f0985aa97b5264e"
            ]
        ]
    },
    {
        "id": "9f0985aa97b5264e",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Picker UAT",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar binPartId = msg.payload.binPartId;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT CONCAT(field,': ',content) AS Kolom FROM transaction_attr \" +\n        \"WHERE transaction_id = '\" + parameter + \"' \";\n}\nif (jenis == 'PluginStates') {\n        msg.topic = \"SELECT id,state_type,description, \" +\n                \"CONCAT(state_type, '-', description) AS concatName \" +\n                \"FROM cfg_state_type ;\";\n}\nif (jenis == 'Routing') {\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" +\n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" +\n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" +\n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" +\n                \"WHERE 1 = 1 \";\n\n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" +\n                        \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" +\n                        \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC; \"\n}\n\nconsole.info('Picker Database UAT');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 540,
        "wires": [
            [
                "a2697cf95665436a"
            ]
        ]
    },
    {
        "id": "a2697cf95665436a",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "389dba188387bcce",
        "name": "",
        "x": 440,
        "y": 540,
        "wires": [
            [
                "929f96d8e739c392",
                "49b306b8b06889bd"
            ]
        ]
    },
    {
        "id": "929f96d8e739c392",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 520,
        "wires": []
    },
    {
        "id": "49b306b8b06889bd",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 560,
        "wires": []
    },
    {
        "id": "d557859e7eec4e28",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "389dba188387bcce",
        "name": "",
        "x": 440,
        "y": 460,
        "wires": [
            [
                "448333ec5168e99d",
                "49f42a76da7e2091"
            ]
        ]
    },
    {
        "id": "448333ec5168e99d",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Uat",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "49f42a76da7e2091",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 480,
        "wires": []
    },
    {
        "id": "90ee1c8ab561f2c9",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "MenuSTG",
        "url": "/ecp/menuStg",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "b911f4c372464c55"
            ]
        ]
    },
    {
        "id": "b911f4c372464c55",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Menu STG",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\nvar member = msg.payload.member;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if (member != '') {\n                msg.topic += \"AND participant_type = '\" + member + \"' \";\n        }\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower LIKE '\" + binLower + \"%' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT * \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        if(rrn.length > 0) {\n                msg.topic += \"AND reff.content = '\" + rrn + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database STG');\n// console.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('RRN: ' + rrn);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 800,
        "wires": [
            [
                "e8a49ff8a13c253e"
            ]
        ]
    },
    {
        "id": "b139716270ec9485",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "pickerStg",
        "url": "/ecp/pickerStg",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "e5c4fdb21ccf7242"
            ]
        ]
    },
    {
        "id": "e5c4fdb21ccf7242",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Picker STG",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar binPartId = msg.payload.binPartId;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT CONCAT(field,': ',content) AS Kolom FROM transaction_attr \" +\n        \"WHERE transaction_id = '\" + parameter + \"' \";\n}\nif (jenis == 'Routing') {\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" +\n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" +\n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" +\n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" +\n                \"WHERE 1 = 1 \";\n\n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" +\n                        \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" +\n                        \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC; \"\n}\n\nconsole.info('Picker Database STG');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 880,
        "wires": [
            [
                "db389ecf0a3f5bde"
            ]
        ]
    },
    {
        "id": "0cb747878f0ef1a7",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 860,
        "wires": []
    },
    {
        "id": "f09675a09f148b6e",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 900,
        "wires": []
    },
    {
        "id": "e8a49ff8a13c253e",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "7caae597ab540484",
        "name": "STG",
        "x": 490,
        "y": 800,
        "wires": [
            [
                "047892526e712d96",
                "a91641a438b86f63"
            ]
        ]
    },
    {
        "id": "047892526e712d96",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Prod",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 780,
        "wires": []
    },
    {
        "id": "a91641a438b86f63",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 820,
        "wires": []
    },
    {
        "id": "db389ecf0a3f5bde",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "7caae597ab540484",
        "name": "STG",
        "x": 510,
        "y": 880,
        "wires": [
            [
                "0cb747878f0ef1a7",
                "f09675a09f148b6e"
            ]
        ]
    },
    {
        "id": "b0371d3932d1524e",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "MenuSIT",
        "url": "/ecp/menuSit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "57c47b33cca9faff"
            ]
        ]
    },
    {
        "id": "57c47b33cca9faff",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Menu SIT",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\nvar member = msg.payload.member;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if (member != '') {\n                msg.topic += \"AND participant_type = '\" + member + \"' \";\n        }\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_iss_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" + \n                \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }   \n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC; \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT *, cp.id AS idCP \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg_Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        if(rrn.length > 0) {\n                msg.topic += \"AND reff.content = '\" + rrn + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS cType, p.sharedobject AS pluginName, cp.name AS containerPluginName \" + \n        \"FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id \" +\n        \"JOIN plugin p ON c.plugin_id = p.id \" +\n        \"LEFT JOIN container_plugin cp ON c.container_plugin_id = cp.id ;\";\n}\n\nif (jenis == undefined){\n        msg.topic == \"\";\n} else if (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database SIT');\nconsole.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\nconsole.info('limit: ' + limit);\n// console.info('rrn: ' + rrn.length);\n// console.info('date: ' + date);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 260,
        "wires": [
            [
                "452b340779ccd757"
            ]
        ]
    },
    {
        "id": "452b340779ccd757",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "2968a726ab12d19e",
        "name": "",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "d701cc6ee3567a06",
                "ae78a5700c56e2c2"
            ]
        ]
    },
    {
        "id": "d701cc6ee3567a06",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Sit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 240,
        "wires": []
    },
    {
        "id": "ae78a5700c56e2c2",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "681b522e5bac4d7e",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "MenuWLA",
        "url": "/ecp/menuWla",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 620,
        "wires": [
            [
                "3f0d0562b7673183"
            ]
        ]
    },
    {
        "id": "3f0d0562b7673183",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Menu WLA",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\nvar member = msg.payload.member;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if (member != '') {\n                msg.topic += \"AND participant_type = '\" + member + \"' \";\n        }\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower LIKE '\" + binLower + \"%' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT * \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\n\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database WLA');\n// console.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('RRN: ' + rrn);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 620,
        "wires": [
            [
                "1c74d4ac30e2db57"
            ]
        ]
    },
    {
        "id": "4fe2f5306c092ae2",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "pickerWla",
        "url": "/ecp/pickerWla",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 700,
        "wires": [
            [
                "0eb572ca7d58515e"
            ]
        ]
    },
    {
        "id": "0eb572ca7d58515e",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Picker WLA",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT CONCAT(field,': ',content) AS Kolom FROM transaction_attr \" +\n        \"WHERE transaction_id = '\" + parameter + \"' \";\n}\n\nconsole.info('Picker Database WLA');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 700,
        "wires": [
            [
                "38b1b6491bb62f84"
            ]
        ]
    },
    {
        "id": "acf0633d2b6b0fa8",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 680,
        "wires": []
    },
    {
        "id": "b3b9029f35535f8b",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 720,
        "wires": []
    },
    {
        "id": "1c74d4ac30e2db57",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "1358ab37345160ad",
        "name": "WLA",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "fbbd7f8a6c280f97",
                "b9a66517f6217180"
            ]
        ]
    },
    {
        "id": "fbbd7f8a6c280f97",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Prod",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 600,
        "wires": []
    },
    {
        "id": "b9a66517f6217180",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 640,
        "wires": []
    },
    {
        "id": "38b1b6491bb62f84",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "1358ab37345160ad",
        "name": "WLA",
        "x": 490,
        "y": 700,
        "wires": [
            [
                "acf0633d2b6b0fa8",
                "b3b9029f35535f8b"
            ]
        ]
    },
    {
        "id": "b208469071af64f2",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "MenuPROD",
        "url": "/ecp/menuProd",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "01e5304aea32bfee"
            ]
        ]
    },
    {
        "id": "01e5304aea32bfee",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Menu PROD",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\nvar member = msg.payload.member;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if (member != '') {\n                msg.topic += \"AND participant_type = '\" + member + \"' \";\n        }\n}\n\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower LIKE '\" + binLower + \"%' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT * \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        if(rrn.length > 0) {\n                msg.topic += \"AND reff.content = '\" + rrn + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database PROD');\n// console.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('RRN: ' + rrn);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 960,
        "wires": [
            [
                "2a4bbac1986f7e2c"
            ]
        ]
    },
    {
        "id": "a02e1cecf63377e8",
        "type": "http in",
        "z": "4983d460445b7886",
        "name": "pickerProd",
        "url": "/ecp/pickerProd",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "7e59fe2fa159f70a"
            ]
        ]
    },
    {
        "id": "7e59fe2fa159f70a",
        "type": "function",
        "z": "4983d460445b7886",
        "name": "Query Picker PROD",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT CONCAT(field,': ',content) AS Kolom FROM transaction_attr \" +\n        \"WHERE transaction_id = '\" + parameter + \"' \";\n}\n\nconsole.info('Picker Database PROD');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1040,
        "wires": [
            [
                "4e07ae3725d75c92"
            ]
        ]
    },
    {
        "id": "aee5614354d43a97",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1020,
        "wires": []
    },
    {
        "id": "56b591c022d066f2",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2a4bbac1986f7e2c",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "1358ab37345160ad",
        "name": "PROD",
        "x": 490,
        "y": 960,
        "wires": [
            [
                "fef7e6c3d4549c4b",
                "a447d6e6dd0695f8"
            ]
        ]
    },
    {
        "id": "fef7e6c3d4549c4b",
        "type": "debug",
        "z": "4983d460445b7886",
        "name": "Result Prod",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 940,
        "wires": []
    },
    {
        "id": "a447d6e6dd0695f8",
        "type": "http response",
        "z": "4983d460445b7886",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 980,
        "wires": []
    },
    {
        "id": "4e07ae3725d75c92",
        "type": "mysql",
        "z": "4983d460445b7886",
        "mydb": "1358ab37345160ad",
        "name": "PROD",
        "x": 510,
        "y": 1040,
        "wires": [
            [
                "aee5614354d43a97",
                "56b591c022d066f2"
            ]
        ]
    },
    {
        "id": "7b09e0c8ae308620",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "Menu",
        "url": "/ecp/menuBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "d2c16ed1f637672e"
            ]
        ]
    },
    {
        "id": "d2c16ed1f637672e",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Menu",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar member = msg.payload.member;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\n// var database = msg.payload.database;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant WHERE 1=1 \";\n        if(member != '') {\n                msg.topic += 'AND participant_type = \"' + member + '\" ';\n        }\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 AND oc.iss_participant_id != 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" +\n                \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        \n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT *, cp.id AS idCP \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT \" + \n                \"trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID' \" +\n                \"FROM transaction trans \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n        if(parameter != '' && parameter != undefined) {\n                msg.topic += \"AND trans.id = '\" + parameter + \"' \"; \n        }\n\n        msg.topic += \"ORDER BY DATE DESC \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr;\";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (jenis == undefined){\n        msg.topic == \"\";\n} else if (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database Lokal');\nconsole.info('Jenis: ' + jenis);\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\nconsole.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('acquirer: ' + acquirer);\nconsole.info('binPartId: ' + binPartId);\nconsole.info('keterangan: ' + keterangan);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 60,
        "wires": [
            [
                "2db55012f2b740d7"
            ]
        ]
    },
    {
        "id": "2db55012f2b740d7",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "1b6256ffd06a1a71",
        "name": "DB",
        "x": 490,
        "y": 60,
        "wires": [
            [
                "35fb8687e5e5e358",
                "54ef0cf05a3eb7bc",
                "228e9963da1c659d"
            ]
        ]
    },
    {
        "id": "35fb8687e5e5e358",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result Lokal",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 20,
        "wires": []
    },
    {
        "id": "54ef0cf05a3eb7bc",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "cd79cc4c99d631a6",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "Picker",
        "url": "/ecp/pickerBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "a5d049144b8b6ab2"
            ]
        ]
    },
    {
        "id": "a5d049144b8b6ab2",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Picker",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" + \n        \"CONCAT(id, '-', name) AS concatName \" + \n        \"FROM participant WHERE participant_type = 'ACQ' \" +\n        \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Members') {\n        msg.topic = \"SELECT participant_type AS memberId FROM participant GROUP BY participant_type ;\";\n}\n\nconsole.info('Picker Database Lokal');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 300,
        "wires": [
            [
                "aa9869aa70ced43d"
            ]
        ]
    },
    {
        "id": "aa9869aa70ced43d",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "1b6256ffd06a1a71",
        "name": "DB",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "86f387092bd9bcad",
                "a092e464351c903b"
            ]
        ]
    },
    {
        "id": "86f387092bd9bcad",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "a092e464351c903b",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "c1ecde9722c69d08",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "MenuSIT",
        "url": "/ecp/menuSitBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 420,
        "wires": [
            [
                "a484a68eb6d5ae29"
            ]
        ]
    },
    {
        "id": "a484a68eb6d5ae29",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Menu SIT",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant \";\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" + \n                \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }   \n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT *, cp.id AS idCP \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \", trans.id AS 'TrxID' FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS cType, p.sharedobject AS pluginName, cp.name AS containerPluginName \" + \n        \"FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id \" +\n        \"JOIN plugin p ON c.plugin_id = p.id \" +\n        \"JOIN container_plugin cp ON c.container_plugin_id = cp.id ;\";\n}\n\nif (jenis == undefined){\n        msg.topic == \"\";\n} else if (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database SIT');\nconsole.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\nconsole.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('date: ' + date);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "530598a933490c06"
            ]
        ]
    },
    {
        "id": "a51c22f3f93fb17b",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "d": true,
        "mydb": "2968a726ab12d19e",
        "name": "",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "60c4833a8aefb495",
                "10dfbc58bef33437"
            ]
        ]
    },
    {
        "id": "60c4833a8aefb495",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result Sit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 100,
        "wires": []
    },
    {
        "id": "10dfbc58bef33437",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 140,
        "wires": []
    },
    {
        "id": "3bdd34edebc714b0",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "pickerSit",
        "url": "/ecp/pickerSitBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 520,
        "wires": [
            [
                "4e935517119a8024"
            ]
        ]
    },
    {
        "id": "4e935517119a8024",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query PickerSIT",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr \" +\n        \"WHERE transaction_id = '\" + parameter + \"' \";\n}\n\nconsole.info('Picker Database SIT');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 520,
        "wires": [
            [
                "3b2726c57c43a5ee"
            ]
        ]
    },
    {
        "id": "3b2726c57c43a5ee",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "2968a726ab12d19e",
        "name": "",
        "x": 520,
        "y": 520,
        "wires": [
            [
                "eaf00c813e1069a3",
                "f96588bca0138e8b"
            ]
        ]
    },
    {
        "id": "eaf00c813e1069a3",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 520,
        "wires": []
    },
    {
        "id": "f96588bca0138e8b",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 560,
        "wires": []
    },
    {
        "id": "9f7a47bd36d0db41",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "MenuUAT",
        "url": "/ecp/menuUatBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "2c2f6b931f9dd00a"
            ]
        ]
    },
    {
        "id": "2c2f6b931f9dd00a",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Menu UAT",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant \";\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower <= '\" + binLower + \"0000000000000' \" + \n                \"AND bd.bin_upper >= '\" + binLower + \"9999999999999' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT * \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database UAT');\n// console.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 640,
        "wires": [
            [
                "720e26106f03d1c7"
            ]
        ]
    },
    {
        "id": "a24aab49ba82033f",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "d": true,
        "mydb": "389dba188387bcce",
        "name": "",
        "x": 680,
        "y": 200,
        "wires": [
            [
                "ba4eedf14af6a831",
                "2d93dffae31a9633"
            ]
        ]
    },
    {
        "id": "ba4eedf14af6a831",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result Uat",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "2d93dffae31a9633",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 220,
        "wires": []
    },
    {
        "id": "6e9131af6119bf1b",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "pickerUat",
        "url": "/ecp/pickerUatBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 740,
        "wires": [
            [
                "8f853b949091d67f"
            ]
        ]
    },
    {
        "id": "8f853b949091d67f",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Picker UAT",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\n\nconsole.info('Picker Database UAT');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 740,
        "wires": [
            [
                "23dc18ffeef5fb18"
            ]
        ]
    },
    {
        "id": "23dc18ffeef5fb18",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "389dba188387bcce",
        "name": "",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "04885879aaf1852e",
                "028624109c07849d"
            ]
        ]
    },
    {
        "id": "04885879aaf1852e",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 740,
        "wires": []
    },
    {
        "id": "028624109c07849d",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 780,
        "wires": []
    },
    {
        "id": "2eddfb04a6476056",
        "type": "switch",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "property": "payload.database",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lokal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Sit",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Uat",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 220,
        "wires": [
            [],
            [
                "a51c22f3f93fb17b"
            ],
            [
                "a24aab49ba82033f"
            ]
        ]
    },
    {
        "id": "530598a933490c06",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "2968a726ab12d19e",
        "name": "",
        "x": 520,
        "y": 420,
        "wires": [
            [
                "a0558faa7f7960a0",
                "4fdc1beb5dd22da1"
            ]
        ]
    },
    {
        "id": "a0558faa7f7960a0",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result Sit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "4fdc1beb5dd22da1",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "720e26106f03d1c7",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "389dba188387bcce",
        "name": "",
        "x": 500,
        "y": 640,
        "wires": [
            [
                "fc4df738853692f8",
                "554e34d1514e1c70"
            ]
        ]
    },
    {
        "id": "fc4df738853692f8",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result Uat",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 620,
        "wires": []
    },
    {
        "id": "554e34d1514e1c70",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "228e9963da1c659d",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "buffer to string",
        "func": "console.info(\"2...... info DB before: \" + msg);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 140,
        "wires": [
            [
                "7d90a72bc2edfcf4"
            ]
        ]
    },
    {
        "id": "7d90a72bc2edfcf4",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 140,
        "wires": []
    },
    {
        "id": "663ae5b864b6cede",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "MenuPROD",
        "url": "/ecp/menuProdBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 860,
        "wires": [
            [
                "ec7dcd85166bf844"
            ]
        ]
    },
    {
        "id": "ec7dcd85166bf844",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Menu PROD",
        "func": "var jenis = msg.payload.jenis;\nvar keyType = msg.payload.keyType;\nvar parameter = msg.payload.parameter;\nvar acquirer = msg.payload.acquirer;\nvar binLower = msg.payload.binLower;\nvar limit = msg.payload.limit;\nvar containerId = msg.payload.containerId;\nvar date = '2024-05-08';\n//msg.payload.date;\nvar binPartId = msg.payload.binPartId;\nvar keterangan = msg.payload.keterangan;\nvar rrn = msg.payload.rrn;\n\nif (jenis == 'Participant'){\n        msg.topic = \"SELECT * FROM participant \";\n}\nif(jenis == 'BinParticipant') {\n        msg.topic = \"SELECT CONCAT(ap.id, '-',ap.name) AS acqName, CONCAT(ip.id, '-',ip.name) AS isName,bg.name AS gwName, bp.* \" +\n        \"FROM bin_participant bp \" +\n        \"JOIN participant ap ON ap.id = bp.participant_acq_id \" +\n        \"JOIN participant ip ON ip.id = bp.participant_acq_id \" +\n        \"JOIN bin_gateway bg ON bg.id = bp.gateway_id \";\n        \n        if (binPartId != '') {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        if (keterangan != '' && keterangan != undefined) {\n                msg.topic += \"AND bp.description LIKE '%\" + keterangan + \"%' \";\n        }\n}\nif (jenis == 'OnlineConfig'){\n        msg.topic = \"SELECT CONCAT(ip.id,'-',ip.name) AS issuer, oc.container_plugin_name AS cpName, oc.* \" + \n                \"FROM online_config oc \" + \n                \"LEFT JOIN participant ip ON ip.id = oc.iss_participant_id \" +\n                \"WHERE oc.plugin_id = 0 \";\n}\nif (jenis == 'Routing'){\n        msg.topic = \"SELECT bp.id, bp.participant_acq_id AS acqId, ap.name AS acq, \" +\n                \"CONCAT(bp.participant_acq_id,'-', ap.name) AS namaAcq, \" + \n                \"bd.bin_lower AS binLower, bd.bin_upper AS binUpper, \" +\n                \"bg.id AS idGw, '-', bg.name AS namaGw, \" +\n                \"CONCAT(bg.id, '-', bg.name) AS NamaGateway, bp.id AS idBinPart, \" + \n                \"bp.priority prioritas, bp.participant_iss_id AS idIssuer, ip.name AS issuer, \" +\n                \"CONCAT(bp.participant_iss_id,'-', ip.name) AS namaIssuer, \" + \n                \"ip.container_plugin_name AS namaContainerPlugin, bp.rule, bp.description AS keterangan \" +\n                \"FROM bin_participant bp \" +\n                \"RIGHT JOIN bin_details bd \" +\n                \"ON bp.gateway_id = bd.gateway_id \" +\n                \"LEFT JOIN bin_gateway bg \" +\n                \"ON bp.gateway_id = bg.id \" +\n                \"LEFT JOIN participant ap \" +\n                \"ON bp.participant_acq_id = ap.id \" +\n                \"LEFT JOIN participant ip \" +\n                \"ON bp.participant_iss_id = ip.id \" + \n                \"WHERE 1 = 1 \";\n                \n        if (acquirer != '' && acquirer != undefined) {\n                msg.topic += \"AND bp.participant_acq_id = '\" + acquirer + \"' \" + \n                \"AND bd.bin_lower LIKE '\" + binLower + \"%' \";\n        }\n        if (binPartId != '' && binPartId != undefined) {\n                msg.topic += \"AND bp.id = '\" + binPartId + \"' \";\n        }\n        msg.topic += \"ORDER BY bp.priority DESC, bd.bin_lower ASC \"\n}\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"SELECT * \" + \n                \"FROM container_plugin cp \" + \n                \"JOIN plugin p on cp.plugin_id = p.id \" +\n                \"WHERE 1=1 \";\n        if (containerId != '') {\n                msg.topic += 'AND container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'ContainerPluginAtt'){\n        msg.topic = \"SELECT cpa.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_attr cpa \" +\n                \"JOIN container_plugin cp ON cpa.container_plugin_id = cp.id \";\n}\nif (jenis == 'ContainerPluginInstance'){\n        msg.topic = \"SELECT cpi.*, cp.name AS namaContainerPlugin \" + \n                \"FROM container_plugin_instance cpi \" +\n                \"JOIN container_plugin cp ON cpi.container_plugin_id = cp.id \";\n        if (containerId != '') {\n                msg.topic += 'AND cpi.container_id = \"' + containerId + '\" ';\n        }\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE 1=1 \";\n\n        if(date != null || date != undefined) {\n                msg.topic += \"AND DATE_FORMAT(trans.dt,'%Y-%m-%d') = '\" + date + \"' \";\n        }\n        if(rrn != '' && rrn != undefined) {\n                msg.topic += \"AND reff.content = '\" + rrn + \"' \";\n        }\n        msg.topic += \"ORDER BY trans.id DESC \";\n}\nif (jenis == 'TransactionChart'){\n        msg.topic = \"SELECT * \" + \n                \"FROM transaction \"+\n                \"WHERE 1=1 \";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type;\";\n}\nif (jenis == 'MsgClass'){\n        msg.topic = \"SELECT * FROM cfg_msgclass;\";\n}\nif (jenis == 'MsgType'){\n        msg.topic = \"SELECT * FROM cfg_msgtype;\";\n}\nif (jenis == 'NodeType'){\n        msg.topic = \"SELECT * FROM cfg_node_type;\";\n}\nif (jenis == 'PanEntry'){\n        msg.topic = \"SELECT * FROM cfg_panentry;\";\n}\nif (jenis == 'PinEntry'){\n        msg.topic = \"SELECT * FROM cfg_pinentry;\";\n}\nif (jenis == 'PluginStatus'){\n        msg.topic = \"SELECT * FROM cfg_pluginstatus;\";\n}\nif (jenis == 'StateType'){\n        msg.topic = \"SELECT * FROM cfg_state_type;\";\n}\nif (jenis == 'BinGateway'){\n        msg.topic = \"SELECT * FROM bin_gateway;\";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\nif (jenis == 'Conversion') {\n        msg.topic = \"SELECT c.*, ct.description AS deskripsi FROM conversion c \" +\n        \"JOIN conversion_type ct on c.type_id = ct.id ; \";\n}\n\nif (limit || limit == undefined) {\n        msg.topic += \"LIMIT 50 ;\";\n}\nconsole.info('Menu Database PROD');\n// console.info('Jenis: ' + jenis);\n// console.info('Database SIT: ');\n// console.info('keyType: ' + msg.keyType);\n// console.info('Query: ' + msg.topic);\n// console.info('parameter: ' + parameter);\n// console.info('limit: ' + limit);\n// console.info('container_id: ' + container_id);\nconsole.info('RRN: ' + rrn);\nconsole.info('msg: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 860,
        "wires": [
            [
                "1193132fd1ef0c32"
            ]
        ]
    },
    {
        "id": "265ca78561a04d17",
        "type": "http in",
        "z": "026f72c9c10c6ee8",
        "name": "pickerUat",
        "url": "/ecp/pickerProdBackup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 960,
        "wires": [
            [
                "6248f8cb6956eca3"
            ]
        ]
    },
    {
        "id": "6248f8cb6956eca3",
        "type": "function",
        "z": "026f72c9c10c6ee8",
        "name": "Query Picker PROD",
        "func": "var jenis = msg.payload.jenis;\nvar parameter = msg.payload.parameter;\n\nif(jenis == 'ContainerPlugin') {\n        msg.topic = \"SELECT * FROM container_plugin \" +\n        \"WHERE name = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Acquirer'){\n        msg.topic = \"SELECT id, name, \" +\n                \"CONCAT(id, '-', name) AS concatName \" +\n                \"FROM participant WHERE participant_type = 'ACQ' \" +\n                \"AND name LIKE 'EFTS%' ORDER BY name ;\";\n}\nif (jenis == 'KeyType'){\n        msg.topic = \"SELECT * FROM cfg_key_type \"+\n        \"WHERE key_type = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Plugin'){\n        msg.topic = \"SELECT * FROM plugin \"+\n        \"WHERE id = '\" + parameter + \"' ;\";\n}\nif(jenis == 'BinPart') {\n        msg.topic = \"SELECT * FROM bin_participant \" +\n        \"WHERE id = '\" + parameter + \"'\" +\n        \";\";\n}\nif (jenis == 'Containers') {\n        msg.topic = \"SELECT * FROM container ;\";\n}\nif (jenis == 'Transaction'){\n        msg.topic = \"SELECT \" + \n                \"DATE_FORMAT(trans.dt,'%Y-%m-%d %H:%i:%s') AS 'tanggal',trans.id AS 'Trx_ID', trans.participant_acq_id AS 'Acq ID', acq.name AS 'Acq Name' \" +\n                \", trans.participant_iss_id AS 'Iss ID', iss.name AS 'Iss Name', trans.msgclass AS 'Msg Class' \" +\n                \", msgc.description AS 'Class Desc', trans.msgtype AS 'Msg Type', msgt.description AS 'Type Desc' \" +\n                \", trans.result AS 'Result', res.description AS 'Result Desc', reff.content AS 'RRN'  \" +\n                \", res.description AS 'Result Desc', reff.content AS 'RRN' , format(trans.amount/100,2) AS 'Amount' \" +\n                \", prod.content AS 'Product', subprod.content AS 'Sub Product' \" +\n                \", IF(prcode.content IS NULL,'',prcode.content) AS 'Principal Code' \" +\n                \", IF(prcode.content = '','',IF(prcode.content = '360004',IF(subprod.content = 'ATMS','OFF-US/NET','ON-US/NET'),'OFF-US/NET')) AS 'Category' \" +\n                \", CONVERT_TZ(trans.dt,'+00:00','+07:00') AS DATE \" +\n                \", trans.tid AS 'Term Id', trans.uuid AS 'UUID', trans.refuuid AS 'Reff UUID', trans.reversaltries AS 'Rev Tries' \" +\n                \"FROM transaction trans \" +\n                \"LEFT JOIN participant acq ON trans.participant_acq_id = acq.id \" +\n                \"LEFT JOIN cfg_msgclass msgc ON trans.msgclass = msgc.id \" +\n                \"LEFT JOIN cfg_msgtype msgt ON trans.msgtype = msgt.id \" +\n                \"LEFT JOIN transaction_result res ON trans.result = res.id \" +\n                \"LEFT JOIN transaction_attr reff ON trans.id = reff.transaction_id AND reff.field = 'IN.RRN' \" +\n                \"LEFT JOIN participant iss ON trans.participant_iss_id = iss.id \" +\n                \"LEFT JOIN transaction_attr subprod ON trans.id = subprod.transaction_id AND subprod.field = 'IR.SUB_PRODUCT' \" +\n                \"LEFT JOIN transaction_attr prod ON trans.id = prod.transaction_id AND prod.field = 'IN.PROD' \" +\n                \"LEFT JOIN transaction_status stat ON trans.status = stat.id \" +\n                \"LEFT JOIN transaction_attr prcode ON trans.id = prcode.transaction_id AND prcode.field = 'IR.PRINCIPALS_CODE' \" +\n                \"WHERE trans.id = '\" + parameter + \"' \";\n}\nif (jenis == 'TrxAttr') {\n        msg.topic = \"SELECT * FROM transaction_attr ORDER BY transaction_id DESC \";\n}\n\nconsole.info('Picker Database UAT');\nconsole.info('Query: ' + msg.topic);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 960,
        "wires": [
            [
                "dcdf66e068c8b8b2"
            ]
        ]
    },
    {
        "id": "4e59a5447cb5e3e5",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 960,
        "wires": []
    },
    {
        "id": "c0aa67e561a35d93",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1193132fd1ef0c32",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "1358ab37345160ad",
        "name": "PROD",
        "x": 490,
        "y": 860,
        "wires": [
            [
                "12770faede2fee82",
                "f8ecb01e1a36ccc5"
            ]
        ]
    },
    {
        "id": "12770faede2fee82",
        "type": "debug",
        "z": "026f72c9c10c6ee8",
        "name": "Result Prod",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 840,
        "wires": []
    },
    {
        "id": "f8ecb01e1a36ccc5",
        "type": "http response",
        "z": "026f72c9c10c6ee8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 880,
        "wires": []
    },
    {
        "id": "dcdf66e068c8b8b2",
        "type": "mysql",
        "z": "026f72c9c10c6ee8",
        "mydb": "1358ab37345160ad",
        "name": "PROD",
        "x": 490,
        "y": 960,
        "wires": [
            [
                "4e59a5447cb5e3e5",
                "c0aa67e561a35d93"
            ]
        ]
    },
    {
        "id": "8576766d7bb5aacd",
        "type": "http in",
        "z": "5b6ceccc0b8f8113",
        "name": "ADD Audit",
        "url": "/ecp/audit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "f61a9c1ddd20e73d"
            ]
        ]
    },
    {
        "id": "f61a9c1ddd20e73d",
        "type": "function",
        "z": "5b6ceccc0b8f8113",
        "name": "QUERY",
        "func": "// var username = msg.payload.userName;\nvar database = msg.payload.database;\nvar menu = msg.payload.menu;\nmsg.topic = `INSERT INTO audit (username, env, menu, activity_name, activities,datetime) `+\n`VALUES ('${msg.payload.fullName}','${database}','${menu}','${msg.payload.activityName}','${msg.payload.activities}','${msg.payload.datetime}');`\n\nconsole.info('database: ' + database);\nconsole.info('msg: ' + msg.topic);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "6fc7cfa4c61beb9b"
            ]
        ]
    },
    {
        "id": "6fc7cfa4c61beb9b",
        "type": "mysql",
        "z": "5b6ceccc0b8f8113",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "DB",
        "x": 470,
        "y": 40,
        "wires": [
            [
                "4711932a899bb5ff",
                "63e31691ca313fe5"
            ]
        ]
    },
    {
        "id": "4711932a899bb5ff",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 20,
        "wires": []
    },
    {
        "id": "63e31691ca313fe5",
        "type": "http response",
        "z": "5b6ceccc0b8f8113",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "3ab63a9226fc65c9",
        "type": "http in",
        "z": "5b6ceccc0b8f8113",
        "name": "Update",
        "url": "/ecp/update",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 80,
        "wires": [
            [
                "2b035316b97a55f4"
            ]
        ]
    },
    {
        "id": "2b035316b97a55f4",
        "type": "function",
        "z": "5b6ceccc0b8f8113",
        "name": "QUERY",
        "func": "// var username = msg.payload.userName;\nvar jenis = msg.payload.jenis;\nvar database = msg.payload.database;\nvar idCP = msg.payload.idCP;\nvar setValue = msg.payload.setValue;\n\nif (jenis == 'ContainerPlugin'){\n        msg.topic = \"UPDATE container_plugin SET \" + setValue + \" ;\";\n}\n\nconsole.info('database: ' + database);\nconsole.info('msg: ' + msg.topic);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 140,
        "wires": [
            [
                "2a8f59c1737d8ab6"
            ]
        ]
    },
    {
        "id": "2c5e7ea22f4c08a3",
        "type": "mysql",
        "z": "5b6ceccc0b8f8113",
        "mydb": "1b6256ffd06a1a71",
        "name": "Ren-Lokal",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "1c385abe4b37982b",
                "2f8d6fcade7e47ac"
            ]
        ]
    },
    {
        "id": "1c385abe4b37982b",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f8d6fcade7e47ac",
        "type": "http response",
        "z": "5b6ceccc0b8f8113",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "2a8f59c1737d8ab6",
        "type": "switch",
        "z": "5b6ceccc0b8f8113",
        "name": "",
        "property": "payload.database",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lokal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SIT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "UAT",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 110,
        "y": 220,
        "wires": [
            [
                "2c5e7ea22f4c08a3",
                "cbd57c68037d7905"
            ],
            [
                "fcf8b63f2de4712f",
                "d9926b12724174a7"
            ],
            [
                "9dc5d9eeb795925e",
                "f9b6aa57c6092475"
            ]
        ]
    },
    {
        "id": "fcf8b63f2de4712f",
        "type": "mysql",
        "z": "5b6ceccc0b8f8113",
        "mydb": "2968a726ab12d19e",
        "name": "",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "04a84b397ae6992c",
                "b3244962ee91eec2"
            ]
        ]
    },
    {
        "id": "04a84b397ae6992c",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "Result Sit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "b3244962ee91eec2",
        "type": "http response",
        "z": "5b6ceccc0b8f8113",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "9dc5d9eeb795925e",
        "type": "mysql",
        "z": "5b6ceccc0b8f8113",
        "mydb": "389dba188387bcce",
        "name": "",
        "x": 480,
        "y": 280,
        "wires": [
            [
                "de664e8fd9f827fc",
                "a7e7aea2a978ba74"
            ]
        ]
    },
    {
        "id": "de664e8fd9f827fc",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "Result Sit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "a7e7aea2a978ba74",
        "type": "http response",
        "z": "5b6ceccc0b8f8113",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "cbd57c68037d7905",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "LOKAL",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 100,
        "wires": []
    },
    {
        "id": "d9926b12724174a7",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "SIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 380,
        "wires": []
    },
    {
        "id": "f9b6aa57c6092475",
        "type": "debug",
        "z": "5b6ceccc0b8f8113",
        "name": "UAT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 420,
        "wires": []
    },
    {
        "id": "351dba7c1091c862",
        "type": "http in",
        "z": "5b6ceccc0b8f8113",
        "name": "Add",
        "url": "/ecp/add",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 380,
        "wires": [
            [
                "4afe944891d14d37"
            ]
        ]
    },
    {
        "id": "4afe944891d14d37",
        "type": "function",
        "z": "5b6ceccc0b8f8113",
        "name": "QUERY",
        "func": "// var username = msg.payload.userName;\nvar jenis = msg.payload.jenis;\nvar database = msg.payload.database;\nvar value = msg.payload.value;\n\nif (jenis == 'ParticipantAdd'){\n        msg.topic = \"INSERT INTO participant VALUES(\" + \n                value + \")\";\n}\nconsole.info('database: ' + database);\nconsole.info('msg: ' + msg.topic);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 300,
        "wires": [
            [
                "2a8f59c1737d8ab6"
            ]
        ]
    },
    {
        "id": "b0174b1c20a3901b",
        "type": "ssh-exec",
        "z": "efc869c07b0e2986",
        "sshconfig": "-manual-",
        "name": "localhost",
        "host": "192.168.56.101",
        "port": "22",
        "username": "glachner",
        "x": 480,
        "y": 120,
        "wires": [
            [
                "3b590c71d61c6c65"
            ]
        ]
    },
    {
        "id": "a14fcb57b33ea5c8",
        "type": "debug",
        "z": "efc869c07b0e2986",
        "name": "debug 1",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "543c75563434e468",
        "type": "inject",
        "z": "efc869c07b0e2986",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "e9f82b7c8289857c"
            ]
        ]
    },
    {
        "id": "1c292bdb3dacfe73",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "REN",
        "func": "//msg.payload = \"ls --color=never -la\\n\";\n// msg.payload = \"systemctl status firewalld.service\\n\";\nvar parameter = msg.payload.parameter;\nmsg.payload = '/app/jalin_renaissance/renOnlineSrv.sh ' + \n    parameter + ' \\n logout';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 80,
        "wires": [
            [
                "b0174b1c20a3901b"
            ]
        ]
    },
    {
        "id": "3b590c71d61c6c65",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "buffer to string",
        "func": "// msg.payload = {\"hasil\" : ':::: ' + msg.payload + ' ::::'};\nmsg.payload = msg.payload.toString();\n// console.info(\"info after: \" + msg.payload.hasil);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            [
                "a14fcb57b33ea5c8",
                "56d4caaa7f255e97"
            ]
        ]
    },
    {
        "id": "d1a2484cd3102d8b",
        "type": "inject",
        "z": "efc869c07b0e2986",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "ed1708f6bf6648b3"
            ]
        ]
    },
    {
        "id": "ed1708f6bf6648b3",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "Run exit",
        "func": "msg.payload = \"exit\\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 160,
        "wires": [
            [
                "b0174b1c20a3901b"
            ]
        ]
    },
    {
        "id": "6c151fcdc47d6c5a",
        "type": "catch",
        "z": "efc869c07b0e2986",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 660,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ab04e7a820f86cfe",
        "type": "http in",
        "z": "efc869c07b0e2986",
        "name": "Command",
        "url": "/ecp/command",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "1c292bdb3dacfe73"
            ]
        ]
    },
    {
        "id": "56d4caaa7f255e97",
        "type": "http response",
        "z": "efc869c07b0e2986",
        "name": "",
        "statusCode": "200",
        "headers": {
            "data": "msg.payload"
        },
        "x": 880,
        "y": 40,
        "wires": []
    },
    {
        "id": "b0082e5183f9e840",
        "type": "ssh-exec",
        "z": "efc869c07b0e2986",
        "sshconfig": "-manual-",
        "name": "localhost",
        "host": "localhost",
        "port": "22",
        "username": "glachner",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "c513a2bc86cfbd9c"
            ]
        ]
    },
    {
        "id": "ecf4c3ad30c6e4f6",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "Run ls -la",
        "func": "msg.payload = \"ls --color=never -la\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 300,
        "wires": [
            [
                "b0082e5183f9e840"
            ]
        ]
    },
    {
        "id": "e3849b45dfd56427",
        "type": "debug",
        "z": "efc869c07b0e2986",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "c513a2bc86cfbd9c",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "buffer to string",
        "func": "msg.payload = msg.payload.toString();\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "e3849b45dfd56427"
            ]
        ]
    },
    {
        "id": "13ba73a44258402b",
        "type": "catch",
        "z": "efc869c07b0e2986",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "e3849b45dfd56427"
            ]
        ]
    },
    {
        "id": "ca6dee205045fcaa",
        "type": "exec",
        "z": "efc869c07b0e2986",
        "command": "ping google.com",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 600,
        "y": 720,
        "wires": [
            [
                "f00d9dcb4762347d"
            ],
            [],
            []
        ]
    },
    {
        "id": "9e0c21468743a652",
        "type": "inject",
        "z": "efc869c07b0e2986",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 720,
        "wires": [
            [
                "ca6dee205045fcaa"
            ]
        ]
    },
    {
        "id": "f00d9dcb4762347d",
        "type": "debug",
        "z": "efc869c07b0e2986",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 700,
        "wires": []
    },
    {
        "id": "01a50dee34142ffe",
        "type": "http request",
        "z": "efc869c07b0e2986",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "/ecp/ssh",
        "tls": "",
        "persist": true,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 110,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "cae62f60280b88fa",
        "type": "exec queue",
        "z": "efc869c07b0e2986",
        "name": "",
        "currentLine": {
            "row": 5,
            "column": 2
        },
        "command": "node $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "javascript",
        "template": "console.log(`\n{\n\t\"value\": \"exec queue\",\n\t\"purpose\":\"putting the ideas from the exec, template and queue nodes together\"\n}\n`)",
        "output": "str",
        "outputEmpty": false,
        "vimMode": false,
        "queue": 1,
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 390,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "278cdf345786f476",
        "type": "debug",
        "z": "efc869c07b0e2986",
        "name": "debug 20",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "03cb62e1b59411f1",
        "type": "http in",
        "z": "efc869c07b0e2986",
        "name": "Command SIT",
        "url": "/ecp/commandSit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "e38757a9ba7353e3"
            ]
        ]
    },
    {
        "id": "e38757a9ba7353e3",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "REN SIT",
        "func": "var parameter = msg.payload.parameter;\n// msg.payload = \"ls --color=never -la\\n\";\n\nmsg.payload = '/app/jalin_renaissance/renOnlineSrv.sh ' + \n    parameter + ' \\n';\n\n// msg.topic = '/app/jalin_renaissance/renOnlineSrv.sh ' + \n//     parameter + ' \\n';\n\nconsole.info('REN SIT: ');\nconsole.info('parameter: ' + parameter);\nconsole.info('msg: ' + msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "947d1790be053e05"
            ]
        ]
    },
    {
        "id": "947d1790be053e05",
        "type": "ssh-exec",
        "z": "efc869c07b0e2986",
        "sshconfig": "-manual-",
        "name": "SIT",
        "host": "10.132.130.26",
        "port": "22",
        "username": "renapp",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "16797627042e4cd4",
                "b20d077409fc5145"
            ]
        ]
    },
    {
        "id": "9e4df9644867e60b",
        "type": "debug",
        "z": "efc869c07b0e2986",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "16797627042e4cd4",
        "type": "function",
        "z": "efc869c07b0e2986",
        "name": "buffer to string",
        "func": "// console.info(\"2...... info before: \" + msg.payload);\nmsg.payload = {\"hasil\" : ':::: ' + msg.payload + ' ::::'};\n// msg.payload = msg.payload.toString();\nconsole.info(\"REN: \" + msg.payload.hasil);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 340,
        "wires": [
            [
                "9e4df9644867e60b"
            ]
        ]
    },
    {
        "id": "b20d077409fc5145",
        "type": "http response",
        "z": "efc869c07b0e2986",
        "name": "",
        "statusCode": "200",
        "headers": {
            "data": "msg.payload"
        },
        "x": 680,
        "y": 400,
        "wires": []
    },
    {
        "id": "e9f82b7c8289857c",
        "type": "http request",
        "z": "efc869c07b0e2986",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "persist": false,
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "cdfeb322de6de1b6"
            ]
        ]
    },
    {
        "id": "cdfeb322de6de1b6",
        "type": "debug",
        "z": "efc869c07b0e2986",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 200,
        "wires": []
    },
    {
        "id": "bccc5f3055dfdb76",
        "type": "tcp request",
        "z": "f0f8e6d71e9fc9c4",
        "name": "LOCAL",
        "server": "127.0.0.1",
        "port": "3306",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 280,
        "y": 60,
        "wires": [
            [
                "c8144697dd6d3c29"
            ]
        ]
    },
    {
        "id": "2734258a37d58410",
        "type": "inject",
        "z": "f0f8e6d71e9fc9c4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "connected",
        "payloadType": "flow",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "9e336e23177ac3eb"
            ]
        ]
    },
    {
        "id": "07511572eb8c6344",
        "type": "catch",
        "z": "f0f8e6d71e9fc9c4",
        "name": "LOCAL",
        "scope": [
            "bccc5f3055dfdb76"
        ],
        "uncaught": false,
        "x": 290,
        "y": 20,
        "wires": [
            [
                "c0c7c1be7ddc8e37"
            ]
        ]
    },
    {
        "id": "c8144697dd6d3c29",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set LOCAL",
        "rules": [
            {
                "t": "set",
                "p": "localhost",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 60,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "c0c7c1be7ddc8e37",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set LOCAL",
        "rules": [
            {
                "t": "set",
                "p": "localhost",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 20,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "9e336e23177ac3eb",
        "type": "debug",
        "z": "f0f8e6d71e9fc9c4",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 540,
        "wires": []
    },
    {
        "id": "c1bf300f203d534b",
        "type": "http in",
        "z": "f0f8e6d71e9fc9c4",
        "name": "checkMysql",
        "url": "/ecp/checkMysql",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 20,
        "wires": [
            [
                "bccc5f3055dfdb76",
                "00b0b340e54a1356",
                "9eb6eec7f89c2b44",
                "883dc5deb6fb627f",
                "48c965f9472cc600",
                "c6c3fcca80cc3a70"
            ]
        ]
    },
    {
        "id": "8e62266e36e7bb57",
        "type": "function",
        "z": "f0f8e6d71e9fc9c4",
        "name": "Query Koneksi",
        "func": "var vLokal = flow.get('localhost');\nvar vSit = flow.get('sit');\nvar vUat = flow.get('uat');\nvar vWla = flow.get('wla');\nvar vStg = flow.get('stg');\nvar vProd = flow.get('prod');\n// console.log('Koneksi:::: ');\n// console.log('Status Lokal:::: ' + vLokal);\n// console.log('Status SIT:::: ' + vSit);\n// console.log('Status Lokal:::: ' + vUat);\nmsg.payload = [{ lokal: vLokal, sit: vSit, uat: vUat, wla: vWla, stg: vStg, prod: vProd },];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 80,
        "wires": [
            [
                "e11b8b4544abb54b"
            ]
        ]
    },
    {
        "id": "e11b8b4544abb54b",
        "type": "http response",
        "z": "f0f8e6d71e9fc9c4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "00b0b340e54a1356",
        "type": "tcp request",
        "z": "f0f8e6d71e9fc9c4",
        "name": "SIT",
        "server": "10.132.131.13",
        "port": "3306",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 290,
        "y": 140,
        "wires": [
            [
                "2b8b09aa9f167c1d"
            ]
        ]
    },
    {
        "id": "a7e7d8d7794c2212",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set SIT",
        "rules": [
            {
                "t": "set",
                "p": "sit",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 100,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "2b8b09aa9f167c1d",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set SIT",
        "rules": [
            {
                "t": "set",
                "p": "sit",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "804fdda50eb2c073",
        "type": "catch",
        "z": "f0f8e6d71e9fc9c4",
        "name": "SIT",
        "scope": [
            "00b0b340e54a1356"
        ],
        "uncaught": false,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "a7e7d8d7794c2212"
            ]
        ]
    },
    {
        "id": "9760411d8eecab1a",
        "type": "catch",
        "z": "f0f8e6d71e9fc9c4",
        "name": "UAT",
        "scope": [
            "9eb6eec7f89c2b44"
        ],
        "uncaught": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "74aa95f4b322e94e"
            ]
        ]
    },
    {
        "id": "9eb6eec7f89c2b44",
        "type": "tcp request",
        "z": "f0f8e6d71e9fc9c4",
        "name": "UAT",
        "server": "10.132.131.19",
        "port": "3306",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "86810526f98c8e7b"
            ]
        ]
    },
    {
        "id": "74aa95f4b322e94e",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set UAT",
        "rules": [
            {
                "t": "set",
                "p": "uat",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "86810526f98c8e7b",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set UAT",
        "rules": [
            {
                "t": "set",
                "p": "uat",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "883dc5deb6fb627f",
        "type": "tcp request",
        "z": "f0f8e6d71e9fc9c4",
        "name": "WLA",
        "server": "10.132.144.12",
        "port": "3306",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 290,
        "y": 300,
        "wires": [
            [
                "4468aea20b92850b"
            ]
        ]
    },
    {
        "id": "4468aea20b92850b",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set WLA",
        "rules": [
            {
                "t": "set",
                "p": "wla",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "e2db9b3ecaf33796",
        "type": "catch",
        "z": "f0f8e6d71e9fc9c4",
        "name": "WLA",
        "scope": [
            "883dc5deb6fb627f"
        ],
        "uncaught": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "851a46272b54b621"
            ]
        ]
    },
    {
        "id": "851a46272b54b621",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set WLA",
        "rules": [
            {
                "t": "set",
                "p": "wla",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "19d6ac32a8fd22c2",
        "type": "catch",
        "z": "f0f8e6d71e9fc9c4",
        "name": "STG",
        "scope": [
            "48c965f9472cc600"
        ],
        "uncaught": false,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "3a6708812835e0cd"
            ]
        ]
    },
    {
        "id": "3a6708812835e0cd",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set PROD",
        "rules": [
            {
                "t": "set",
                "p": "stg",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2b00a8db25b085ad",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set PROD",
        "rules": [
            {
                "t": "set",
                "p": "stg",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 380,
        "wires": [
            [
                "8e62266e36e7bb57"
            ]
        ]
    },
    {
        "id": "48c965f9472cc600",
        "type": "tcp request",
        "z": "f0f8e6d71e9fc9c4",
        "name": "STG",
        "server": "10.132.17.3",
        "port": "3306",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "2b00a8db25b085ad"
            ]
        ]
    },
    {
        "id": "36fdc552fa1650c0",
        "type": "catch",
        "z": "f0f8e6d71e9fc9c4",
        "name": "PROD",
        "scope": [
            "c6c3fcca80cc3a70"
        ],
        "uncaught": false,
        "x": 290,
        "y": 420,
        "wires": [
            [
                "baf2d6645e9552cb"
            ]
        ]
    },
    {
        "id": "baf2d6645e9552cb",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set PROD",
        "rules": [
            {
                "t": "set",
                "p": "prod",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c6c3fcca80cc3a70",
        "type": "tcp request",
        "z": "f0f8e6d71e9fc9c4",
        "name": "PROD",
        "server": "10.132.5.13",
        "port": "3306",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "73fdfe7d3a4e9296"
            ]
        ]
    },
    {
        "id": "73fdfe7d3a4e9296",
        "type": "change",
        "z": "f0f8e6d71e9fc9c4",
        "name": "set PROD",
        "rules": [
            {
                "t": "set",
                "p": "prod",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "312ccc98.d0a11c",
        "type": "inject",
        "z": "e5f92df34f6bffd8",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "b26654b2.7ff938"
            ]
        ]
    },
    {
        "id": "b26654b2.7ff938",
        "type": "function",
        "z": "e5f92df34f6bffd8",
        "name": "INSERT Bind",
        "func": "msg.topic = \"INSERT INTO test (id,text) VALUES (?,?)\";\nmsg.payload = [2, \"This is a funny world's end\"];\nreturn msg;",
        "outputs": 1,
        "x": 445,
        "y": 101,
        "wires": [
            [
                "631794c4c1ced1c8"
            ]
        ]
    },
    {
        "id": "89a9eba3.64b928",
        "type": "debug",
        "z": "e5f92df34f6bffd8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 851,
        "y": 232,
        "wires": []
    },
    {
        "id": "6e7208e4.98b938",
        "type": "inject",
        "z": "e5f92df34f6bffd8",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 248,
        "y": 152,
        "wires": [
            [
                "c5490fc7.128e"
            ]
        ]
    },
    {
        "id": "c5490fc7.128e",
        "type": "function",
        "z": "e5f92df34f6bffd8",
        "name": "INSERT Old",
        "func": "msg.topic = \"INSERT INTO test (id,text) VALUES (3,'Directly in topic')\";\nreturn msg;",
        "outputs": 1,
        "x": 427,
        "y": 156,
        "wires": [
            [
                "631794c4c1ced1c8"
            ]
        ]
    },
    {
        "id": "fb4218c4.10be88",
        "type": "inject",
        "z": "e5f92df34f6bffd8",
        "name": "Go",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "funny",
        "payloadType": "string",
        "x": 267,
        "y": 316,
        "wires": [
            [
                "7f314efa.5fe1c8"
            ]
        ]
    },
    {
        "id": "7f314efa.5fe1c8",
        "type": "function",
        "z": "e5f92df34f6bffd8",
        "name": "SELECT Old",
        "func": "msg.topic = \"SELECT * FROM test WHERE text LIKE '%\" + msg.payload + \"%'\";\nreturn msg;",
        "outputs": 1,
        "x": 494,
        "y": 319,
        "wires": [
            [
                "631794c4c1ced1c8"
            ]
        ]
    },
    {
        "id": "b8421f3f.610ff",
        "type": "inject",
        "z": "e5f92df34f6bffd8",
        "name": "INSERT Bind - via JSON",
        "props": [
            {
                "p": "payload",
                "v": "[4, \"This is a funny world's end\"]",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "INSERT INTO test (id,text) VALUES (?, ?)",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "INSERT INTO test (id,text) VALUES (?, ?)",
        "payload": "[4, \"This is a funny world's end\"]",
        "payloadType": "string",
        "x": 269,
        "y": 217,
        "wires": [
            [
                "40ffd23a.bd34ac"
            ]
        ]
    },
    {
        "id": "40ffd23a.bd34ac",
        "type": "json",
        "z": "e5f92df34f6bffd8",
        "name": "",
        "x": 469,
        "y": 217,
        "wires": [
            [
                "5e9c78ecb444eeab",
                "631794c4c1ced1c8"
            ]
        ]
    },
    {
        "id": "b636f13a.eb07",
        "type": "inject",
        "z": "e5f92df34f6bffd8",
        "name": "Go \"funny\"",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "%funny%",
        "payloadType": "string",
        "x": 263,
        "y": 370,
        "wires": [
            [
                "ed1867.f2eb1f98"
            ]
        ]
    },
    {
        "id": "ed1867.f2eb1f98",
        "type": "function",
        "z": "e5f92df34f6bffd8",
        "name": "SELECT Bind",
        "func": "msg.topic = \"SELECT * FROM test WHERE text LIKE ?\";\nmsg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "x": 490,
        "y": 373,
        "wires": [
            [
                "631794c4c1ced1c8"
            ]
        ]
    },
    {
        "id": "2f56074a.2be34",
        "type": "inject",
        "z": "e5f92df34f6bffd8",
        "name": "Go \"world's\"",
        "props": [
            {
                "p": "payload",
                "v": "%world's%",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "%world's%",
        "payloadType": "string",
        "x": 267,
        "y": 432,
        "wires": [
            [
                "ed1867.f2eb1f98"
            ]
        ]
    },
    {
        "id": "5e9c78ecb444eeab",
        "type": "debug",
        "z": "e5f92df34f6bffd8",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "631794c4c1ced1c8",
        "type": "mysql",
        "z": "e5f92df34f6bffd8",
        "mydb": "cea7ed5b0a0f01e6",
        "name": "",
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7c30fb48.99cd2c",
        "type": "http in",
        "z": "672488469399d0f1",
        "name": "",
        "url": "/simple",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "3153fbd3.203a64"
            ]
        ]
    },
    {
        "id": "3153fbd3.203a64",
        "type": "template",
        "z": "672488469399d0f1",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Upload a file here:</h1>\n\n<form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\" />\n    <input type=\"submit\" value=\"Submit\">\n</form>",
        "output": "str",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "737e44d2.373a64"
            ]
        ]
    },
    {
        "id": "737e44d2.373a64",
        "type": "http response",
        "z": "672488469399d0f1",
        "name": "",
        "x": 710,
        "y": 80,
        "wires": []
    },
    {
        "id": "4a7eded4.56598",
        "type": "http response",
        "z": "672488469399d0f1",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 440,
        "wires": []
    },
    {
        "id": "46e01eea.4a46a",
        "type": "comment",
        "z": "672488469399d0f1",
        "name": "Simple",
        "info": "",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "72e223ba.672874",
        "type": "template",
        "z": "672488469399d0f1",
        "name": "dropzone.js",
        "field": "dropzonejs",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, _i, _len;\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n          callback = callbacks[_i];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, _i, _len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(_super) {\n    var extend, resolveOption;\n\n    __extends(Dropzone, _super);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent != null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText != null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth == null) && (info.optHeight == null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth == null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight == null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = this._renameFilename(file.name);\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            if (node.nodeName === 'PROGRESS') {\n              _results.push(node.value = progress);\n            } else {\n              _results.push(node.style.width = \"\" + progress + \"%\");\n            }\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFilename = function(name) {\n      if (typeof this.options.renameFilename !== \"function\") {\n        return name;\n      }\n      return this.options.renameFilename(name);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['TB', 'GB', 'MB', 'KB', 'b'];\n        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, _i, _len;\n            if (entries.length > 0) {\n              for (_i = 0, _len = entries.length; _i < _len; _i++) {\n                entry = entries[_i];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = \"\" + path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          if (file.type === \"image/svg+xml\") {\n            _this.emit(\"thumbnail\", file, fileReader.result);\n            if (callback != null) {\n              callback();\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n          file.width = img.width;\n          file.height = img.height;\n          resizeInfo = _this.options.resize.call(_this, file);\n          if (resizeInfo.trgWidth == null) {\n            resizeInfo.trgWidth = resizeInfo.optWidth;\n          }\n          if (resizeInfo.trgHeight == null) {\n            resizeInfo.trgHeight = resizeInfo.optHeight;\n          }\n          canvas = document.createElement(\"canvas\");\n          ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");\n          _this.emit(\"thumbnail\", file, thumbnail);\n          if (callback != null) {\n            return callback();\n          }\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = imageUrl;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));\n      }\n      return this.submitRequest(xhr, formData, files);\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"4.3.0\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);",
        "output": "str",
        "x": 470,
        "y": 380,
        "wires": [
            [
                "4c2a0101.2130d"
            ]
        ]
    },
    {
        "id": "721c9d99.0d0064",
        "type": "http in",
        "z": "672488469399d0f1",
        "name": "",
        "url": "/complex",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 380,
        "wires": [
            [
                "72e223ba.672874"
            ]
        ]
    },
    {
        "id": "5c63bf7.aba48c",
        "type": "template",
        "z": "672488469399d0f1",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<script>\n    {{{dropzonejs}}}\n</script>\n<style>\n    {{{css}}}\n</style>\n\n<script>\n    // \"myAwesomeDropzone\" is the camelized version of the HTML element's ID\n    Dropzone.options.myDropzone = {\n      paramName: \"myFile\", // The name that will be used to transfer the file\n      maxFilesize: 2, // MB\n      accept: function(file, done) {\n        if (file.name == \"justinbieber.jpg\") {\n          done(\"Naha, you don't.\");\n        }\n        else { done(); }\n      }\n    };\n</script>\n\n<h1>Upload a file here:</h1>\n\n<form action=\"/uploadpretty\" class=\"dropzone\" method=\"post\" enctype=\"multipart/form-data\" id=\"my-dropzone\">\n  <div class=\"fallback\">\n    <input name=\"myFile\" type=\"file\" />\n    <input type=\"submit\" value=\"Submit\">\n  </div>\n</form>",
        "output": "str",
        "x": 790,
        "y": 380,
        "wires": [
            [
                "a8d1613b.9a0478"
            ]
        ]
    },
    {
        "id": "a8d1613b.9a0478",
        "type": "http response",
        "z": "672488469399d0f1",
        "name": "",
        "x": 950,
        "y": 380,
        "wires": []
    },
    {
        "id": "7d8e179a.283e4",
        "type": "http response",
        "z": "672488469399d0f1",
        "name": "",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "4c2a0101.2130d",
        "type": "template",
        "z": "672488469399d0f1",
        "name": "css",
        "field": "css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/*\n * The MIT License\n * Copyright (c) 2012 Matias Meno <m@tias.me>\n */\n@-webkit-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-moz-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-webkit-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-moz-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-webkit-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@-moz-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n.dropzone, .dropzone * {\n  box-sizing: border-box; }\n\n.dropzone {\n  min-height: 150px;\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: white;\n  padding: 20px 20px; }\n  .dropzone.dz-clickable {\n    cursor: pointer; }\n    .dropzone.dz-clickable * {\n      cursor: default; }\n    .dropzone.dz-clickable .dz-message, .dropzone.dz-clickable .dz-message * {\n      cursor: pointer; }\n  .dropzone.dz-started .dz-message {\n    display: none; }\n  .dropzone.dz-drag-hover {\n    border-style: solid; }\n    .dropzone.dz-drag-hover .dz-message {\n      opacity: 0.5; }\n  .dropzone .dz-message {\n    text-align: center;\n    margin: 2em 0; }\n  .dropzone .dz-preview {\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    margin: 16px;\n    min-height: 100px; }\n    .dropzone .dz-preview:hover {\n      z-index: 1000; }\n      .dropzone .dz-preview:hover .dz-details {\n        opacity: 1; }\n    .dropzone .dz-preview.dz-file-preview .dz-image {\n      border-radius: 20px;\n      background: #999;\n      background: linear-gradient(to bottom, #eee, #ddd); }\n    .dropzone .dz-preview.dz-file-preview .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview.dz-image-preview {\n      background: white; }\n      .dropzone .dz-preview.dz-image-preview .dz-details {\n        -webkit-transition: opacity 0.2s linear;\n        -moz-transition: opacity 0.2s linear;\n        -ms-transition: opacity 0.2s linear;\n        -o-transition: opacity 0.2s linear;\n        transition: opacity 0.2s linear; }\n    .dropzone .dz-preview .dz-remove {\n      font-size: 14px;\n      text-align: center;\n      display: block;\n      cursor: pointer;\n      border: none; }\n      .dropzone .dz-preview .dz-remove:hover {\n        text-decoration: underline; }\n    .dropzone .dz-preview:hover .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview .dz-details {\n      z-index: 20;\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0;\n      font-size: 13px;\n      min-width: 100%;\n      max-width: 100%;\n      padding: 2em 1em;\n      text-align: center;\n      color: rgba(0, 0, 0, 0.9);\n      line-height: 150%; }\n      .dropzone .dz-preview .dz-details .dz-size {\n        margin-bottom: 1em;\n        font-size: 16px; }\n      .dropzone .dz-preview .dz-details .dz-filename {\n        white-space: nowrap; }\n        .dropzone .dz-preview .dz-details .dz-filename:hover span {\n          border: 1px solid rgba(200, 200, 200, 0.8);\n          background-color: rgba(255, 255, 255, 0.8); }\n        .dropzone .dz-preview .dz-details .dz-filename:not(:hover) {\n          overflow: hidden;\n          text-overflow: ellipsis; }\n          .dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {\n            border: 1px solid transparent; }\n      .dropzone .dz-preview .dz-details .dz-filename span, .dropzone .dz-preview .dz-details .dz-size span {\n        background-color: rgba(255, 255, 255, 0.4);\n        padding: 0 0.4em;\n        border-radius: 3px; }\n    .dropzone .dz-preview:hover .dz-image img {\n      -webkit-transform: scale(1.05, 1.05);\n      -moz-transform: scale(1.05, 1.05);\n      -ms-transform: scale(1.05, 1.05);\n      -o-transform: scale(1.05, 1.05);\n      transform: scale(1.05, 1.05);\n      -webkit-filter: blur(8px);\n      filter: blur(8px); }\n    .dropzone .dz-preview .dz-image {\n      border-radius: 20px;\n      overflow: hidden;\n      width: 120px;\n      height: 120px;\n      position: relative;\n      display: block;\n      z-index: 10; }\n      .dropzone .dz-preview .dz-image img {\n        display: block; }\n    .dropzone .dz-preview.dz-success .dz-success-mark {\n      -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview.dz-error .dz-error-mark {\n      opacity: 1;\n      -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview .dz-success-mark, .dropzone .dz-preview .dz-error-mark {\n      pointer-events: none;\n      opacity: 0;\n      z-index: 500;\n      position: absolute;\n      display: block;\n      top: 50%;\n      left: 50%;\n      margin-left: -27px;\n      margin-top: -27px; }\n      .dropzone .dz-preview .dz-success-mark svg, .dropzone .dz-preview .dz-error-mark svg {\n        display: block;\n        width: 54px;\n        height: 54px; }\n    .dropzone .dz-preview.dz-processing .dz-progress {\n      opacity: 1;\n      -webkit-transition: all 0.2s linear;\n      -moz-transition: all 0.2s linear;\n      -ms-transition: all 0.2s linear;\n      -o-transition: all 0.2s linear;\n      transition: all 0.2s linear; }\n    .dropzone .dz-preview.dz-complete .dz-progress {\n      opacity: 0;\n      -webkit-transition: opacity 0.4s ease-in;\n      -moz-transition: opacity 0.4s ease-in;\n      -ms-transition: opacity 0.4s ease-in;\n      -o-transition: opacity 0.4s ease-in;\n      transition: opacity 0.4s ease-in; }\n    .dropzone .dz-preview:not(.dz-processing) .dz-progress {\n      -webkit-animation: pulse 6s ease infinite;\n      -moz-animation: pulse 6s ease infinite;\n      -ms-animation: pulse 6s ease infinite;\n      -o-animation: pulse 6s ease infinite;\n      animation: pulse 6s ease infinite; }\n    .dropzone .dz-preview .dz-progress {\n      opacity: 1;\n      z-index: 1000;\n      pointer-events: none;\n      position: absolute;\n      height: 16px;\n      left: 50%;\n      top: 50%;\n      margin-top: -8px;\n      width: 80px;\n      margin-left: -40px;\n      background: rgba(255, 255, 255, 0.9);\n      -webkit-transform: scale(1);\n      border-radius: 8px;\n      overflow: hidden; }\n      .dropzone .dz-preview .dz-progress .dz-upload {\n        background: #333;\n        background: linear-gradient(to bottom, #666, #444);\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 0;\n        -webkit-transition: width 300ms ease-in-out;\n        -moz-transition: width 300ms ease-in-out;\n        -ms-transition: width 300ms ease-in-out;\n        -o-transition: width 300ms ease-in-out;\n        transition: width 300ms ease-in-out; }\n    .dropzone .dz-preview.dz-error .dz-error-message {\n      display: block; }\n    .dropzone .dz-preview.dz-error:hover .dz-error-message {\n      opacity: 1;\n      pointer-events: auto; }\n    .dropzone .dz-preview .dz-error-message {\n      pointer-events: none;\n      z-index: 1000;\n      position: absolute;\n      display: block;\n      display: none;\n      opacity: 0;\n      -webkit-transition: opacity 0.3s ease;\n      -moz-transition: opacity 0.3s ease;\n      -ms-transition: opacity 0.3s ease;\n      -o-transition: opacity 0.3s ease;\n      transition: opacity 0.3s ease;\n      border-radius: 8px;\n      font-size: 13px;\n      top: 130px;\n      left: -10px;\n      width: 140px;\n      background: #be2626;\n      background: linear-gradient(to bottom, #be2626, #a92222);\n      padding: 0.5em 1.2em;\n      color: white; }\n      .dropzone .dz-preview .dz-error-message:after {\n        content: '';\n        position: absolute;\n        top: -6px;\n        left: 64px;\n        width: 0;\n        height: 0;\n        border-left: 6px solid transparent;\n        border-right: 6px solid transparent;\n        border-bottom: 6px solid #be2626; }",
        "output": "str",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "5c63bf7.aba48c"
            ]
        ]
    },
    {
        "id": "efe92067.f84b28",
        "type": "http in",
        "z": "672488469399d0f1",
        "name": "",
        "url": "/uploadpretty",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 250,
        "y": 440,
        "wires": [
            [
                "4a7eded4.56598",
                "df0237a0.3141f8"
            ]
        ]
    },
    {
        "id": "25859a94.7d9976",
        "type": "http in",
        "z": "672488469399d0f1",
        "name": "",
        "url": "/upload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "d7e5df8b.97a4e8"
            ]
        ]
    },
    {
        "id": "e1643981.20d7c8",
        "type": "template",
        "z": "672488469399d0f1",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p></p>File {{name}} uploaded !</p>\n\n<h2>Contents:</h2>\n\n<pre>\n{{{payload}}}\n</pre>",
        "output": "str",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "7d8e179a.283e4"
            ]
        ]
    },
    {
        "id": "d7e5df8b.97a4e8",
        "type": "function",
        "z": "672488469399d0f1",
        "name": "toBase64",
        "func": "msg.name = msg.req.files[0].originalname;\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 140,
        "wires": [
            [
                "e1643981.20d7c8"
            ]
        ]
    },
    {
        "id": "b493c450.18d678",
        "type": "comment",
        "z": "672488469399d0f1",
        "name": "Complex",
        "info": "",
        "x": 220,
        "y": 340,
        "wires": []
    },
    {
        "id": "df0237a0.3141f8",
        "type": "debug",
        "z": "672488469399d0f1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.files",
        "x": 478,
        "y": 497,
        "wires": []
    },
    {
        "id": "c4bbe370378bc234",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 60,
        "wires": [
            [
                "1fe0aad8f59279e6"
            ]
        ],
        "l": false
    },
    {
        "id": "067388d0f5f0bc63",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 60,
        "wires": [],
        "l": false
    },
    {
        "id": "4ebf5b2aa93f2b67",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 180,
        "wires": [
            [
                "6d5e78de3114b886"
            ]
        ],
        "l": false
    },
    {
        "id": "49702ca370d9f756",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 180,
        "wires": [],
        "l": false
    },
    {
        "id": "9c2c5923aff087f1",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 240,
        "wires": [
            [
                "37a8a116aae3dce3"
            ]
        ],
        "l": false
    },
    {
        "id": "b35308b00d181b45",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 240,
        "wires": [],
        "l": false
    },
    {
        "id": "e61f3df446be8e0e",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 480,
        "wires": [
            [
                "038111031078bda8"
            ]
        ],
        "l": false
    },
    {
        "id": "6bf711436e4c78b2",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 480,
        "wires": [],
        "l": false
    },
    {
        "id": "71ed70de01f00df6",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 360,
        "wires": [
            [
                "a9e08253657428c1"
            ]
        ],
        "l": false
    },
    {
        "id": "6c5a597dd98e3c69",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 360,
        "wires": [],
        "l": false
    },
    {
        "id": "3316a7a3cc4bbdb6",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 420,
        "wires": [
            [
                "3c40817b162d1ba9"
            ]
        ],
        "l": false
    },
    {
        "id": "15f2032281da3432",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 420,
        "wires": [],
        "l": false
    },
    {
        "id": "376c02853cd956fb",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 300,
        "wires": [
            [
                "34e8cb4e37f2d8a9"
            ]
        ],
        "l": false
    },
    {
        "id": "558c5a8f111dbef9",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 585,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "4de7adfb59574592",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 185,
        "y": 120,
        "wires": [
            [
                "623a2f138efe29ed"
            ]
        ],
        "l": false
    },
    {
        "id": "17e18b61b0e44bea",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 755,
        "y": 120,
        "wires": [],
        "l": false
    },
    {
        "id": "d9f0145631e0c10c",
        "type": "inject",
        "z": "4156c09952f38b56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 875,
        "y": 120,
        "wires": [
            [
                "7571802f132d43f8"
            ]
        ],
        "l": false
    },
    {
        "id": "7571802f132d43f8",
        "type": "function",
        "z": "4156c09952f38b56",
        "name": "using synchronous code interfering with the flow",
        "func": "sleepSync(5000)\nmsg.payload = 'Sync Node.js Hello World'\nreturn msg\n\n// function\nfunction sleepSync(ms) {\n  var start = new Date().getTime(), expire = start + ms;\n  while (new Date().getTime() < expire) { }\n  return;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 120,
        "wires": [
            [
                "2325d1e2296efe00"
            ]
        ]
    },
    {
        "id": "2325d1e2296efe00",
        "type": "debug",
        "z": "4156c09952f38b56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1345,
        "y": 120,
        "wires": [],
        "l": false
    },
    {
        "id": "1fe0aad8f59279e6",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "node.js code",
        "currentLine": {
            "row": 0,
            "column": 24
        },
        "command": "node $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "javascript",
        "template": "console.log('Hello World')",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "067388d0f5f0bc63"
            ]
        ]
    },
    {
        "id": "6d5e78de3114b886",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "bash code",
        "currentLine": {
            "row": 0,
            "column": 18
        },
        "command": "bash $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "sh",
        "template": "echo \"Hello World\"\n",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "49702ca370d9f756"
            ]
        ]
    },
    {
        "id": "37a8a116aae3dce3",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "python code (template parameters)",
        "currentLine": {
            "row": 0,
            "column": 22
        },
        "command": "python3 $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "template": "print('{{{payload}}}')",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "b35308b00d181b45"
            ]
        ]
    },
    {
        "id": "038111031078bda8",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "python code (parsed json output)",
        "currentLine": {
            "row": 0,
            "column": 1
        },
        "command": "python3 $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "template": "print('''\n{\n   \"value\": \"Hello World\" \n}\n\n''')",
        "output": "parsedJSON",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 380,
        "y": 480,
        "wires": [
            [
                "6bf711436e4c78b2"
            ]
        ]
    },
    {
        "id": "a9e08253657428c1",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "python code (exec sleep 3)",
        "currentLine": {
            "row": 6,
            "column": 2
        },
        "command": "python3 $file ",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "template": "import time\n\ntime.sleep(3)\nprint(\"Hello World\")\ntime.sleep(3)\nprint(\"Hello World\")\ntime.sleep(3)\nprint(\"Hello World\")",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 370,
        "y": 360,
        "wires": [
            [
                "6c5a597dd98e3c69"
            ]
        ]
    },
    {
        "id": "3c40817b162d1ba9",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "python code (spawn sleep 3)",
        "currentLine": {
            "row": 8,
            "column": 0
        },
        "command": "python3 -u $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "true",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "template": "import time\n\ntime.sleep(3)\nprint(\"Hello World\")\ntime.sleep(3)\nprint(\"Hello World\")\ntime.sleep(3)\nprint(\"Hello World\")\n",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "15f2032281da3432"
            ]
        ]
    },
    {
        "id": "34e8cb4e37f2d8a9",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "python code (queue)",
        "currentLine": {
            "row": 3,
            "column": 2
        },
        "command": "python3 $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "python",
        "template": "import time\n\ntime.sleep(3)\nprint(\"Hello World\")",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "3",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "558c5a8f111dbef9"
            ]
        ]
    },
    {
        "id": "623a2f138efe29ed",
        "type": "exec queue",
        "z": "4156c09952f38b56",
        "name": "using node.js synchronous code without interfering with the flow",
        "currentLine": {
            "row": 0,
            "column": 0
        },
        "command": "node $file",
        "debugMode": false,
        "outputs": 1,
        "useSpawn": "false",
        "field": "payload",
        "fieldType": "msg",
        "format": "javascript",
        "template": "sleepSync(5000)\nconsole.log('Sync Node.js Hello World')\n\n// function\nfunction sleepSync(ms) {\n  var start = new Date().getTime(), expire = start + ms;\n  while (new Date().getTime() < expire) { }\n  return;\n}",
        "output": "str",
        "outputEmpty": false,
        "vimMode": true,
        "queue": "1",
        "addpayCB": false,
        "splitLine": false,
        "cleanQueue": true,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "17e18b61b0e44bea"
            ]
        ]
    }
]